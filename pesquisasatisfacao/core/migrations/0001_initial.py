# Generated by Django 2.1.3 on 2019-01-20 13:32

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cdalterdata', models.IntegerField(db_index=True, unique=True, verbose_name='Cód. Alterdata')),
                ('name', models.CharField(max_length=100, verbose_name='Nome')),
                ('phone', models.CharField(blank=True, max_length=11, null=True, verbose_name='Telefone')),
            ],
            options={
                'verbose_name': 'Pessoa',
                'verbose_name_plural': 'Pessoas',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(max_length=200, verbose_name='Pergunta')),
                ('level', models.CharField(choices=[('0', 'Dependencia'), ('1', 'Confianca'), ('2', 'Comprometimento'), ('3', 'Preditiva')], default='0', max_length=15, verbose_name='Nível')),
            ],
            options={
                'verbose_name': 'Questão',
                'verbose_name_plural': 'Questões',
                'ordering': ('-level',),
            },
        ),
        migrations.CreateModel(
            name='Search',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('search_key', models.CharField(max_length=200, verbose_name='Período')),
                ('researched', models.CharField(max_length=200, verbose_name='Entrevistado')),
                ('participation_on', models.DateField(auto_now_add=True, verbose_name='Período da pesquisa')),
                ('created_on', models.DateTimeField(auto_now_add=True, verbose_name='Solicitado em')),
            ],
            options={
                'verbose_name': 'Pesquisa',
                'verbose_name_plural': 'Pesquisas',
                'ordering': ('-participation_on',),
            },
        ),
        migrations.CreateModel(
            name='SearchItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('response', models.BooleanField(default=False)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Pergunta', to='core.Question', verbose_name='Pergunta')),
                ('search', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Periodo', to='core.Search', verbose_name='Período da Pesquisa')),
            ],
            options={
                'verbose_name': 'Pesquisa Detalhe',
                'verbose_name_plural': 'Pesquisas Detalhe',
                'ordering': ('-question',),
            },
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('person_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.Person')),
                ('last_search', models.CharField(blank=True, max_length=11, null=True, verbose_name='Última pesquisa.')),
                ('created_on', models.DateField(auto_now_add=True, verbose_name='Criado em.')),
            ],
            options={
                'verbose_name': 'Cliente',
                'verbose_name_plural': 'Clientes',
                'ordering': ('created_on',),
            },
            bases=('core.person',),
        ),
        migrations.AddField(
            model_name='search',
            name='person',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Cliente', to='core.Client'),
        ),
        migrations.AlterUniqueTogether(
            name='search',
            unique_together={('search_key', 'person')},
        ),
    ]
